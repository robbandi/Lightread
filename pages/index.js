import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useRef, useState } from 'react';
import Navbar from '../components/Navs/Nav';
import Title from '../components/Navs/NavTitle';
// import Index from '../components/News/';
import Random from '../components/Random'
import Theme from '../components/Theme';
import styles from '../styles/Home.module.css'
import circa from '../components/Random/styles.module.css'
import { Base } from '../components/base';
export default function Home() {

  // const [theme, setTheme] = useState("dark");
  const [activeTheme, setActiveTheme] = useState('light');
  const inactiveTheme = activeTheme === 'dark' ? 'light' : 'dark' 

  useEffect(() => {
    document.body.dataset.theme = activeTheme;
  }, []);

  useEffect(() => {
    const savedTheme = JSON.parse(localStorage.getItem('saved-theme'))
  if (savedTheme) {
    setActiveTheme(savedTheme)
    }
  }, [])
  
  useEffect(() => {
    localStorage.setItem(
      'saved-theme',
      JSON.stringify(activeTheme)
    )
  }, [activeTheme])

  // const random = () => {
  //   return <Random/>
  // }

  // const news = () => {
  //   return <NewsSpecific/>
  // }

  const [visible, setVisible] = useState(true);
  const docRef = useRef(typeof document !== 'undefined' && document)

  useEffect(() => {
    const doc = docRef.current

    const onClick = () => {
      setVisible(false)
    }

    doc.addEventListener('click', onClick)

    return () => {
      doc.removeEventListener('click', onClick)
    }
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Lightread</title>
        {/* <script src="http://unpkg.com/swipejs/dist/swipe.min.js"/> */}
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="apple-touch-icon" sizes="128x128" href="favicon.png" />
        <link rel="icon" sizes="192x192" href="favicon.png" />
      </Head>
      <main className={styles.main}>
        <span className={styles.lr}>Lightread</span>
        {/* {visible && <Base/>} */}
        {visible && <Base/>}
        <Random/>
        </main>
      {/* </body> */}

      {/* <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </div>
  )
}
